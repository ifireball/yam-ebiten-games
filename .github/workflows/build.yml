name: Build

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
    tags: ["*"]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Setup Build dependencies
      uses: awalsh128/cache-apt-pkgs-action@v1.4.2
      with:
        packages: >-
          gcc libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev
          libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev
          pkg-config
        version: 1

    - name: Build 
      run: go build -o dist/yam-play.linux.$(uname -m) cmd/yam-play/main.go

    - name: Store Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Linux build
        path: dist/yam-play.linux.*

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Build 
      run: go build -o dist\yam-play.windows.x86_64.exe cmd\yam-play\main.go

    - name: Store Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Windows build
        path: dist\yam-play.windows.*

  release:
    runs-on: ubuntu-latest
    needs: ["build-linux", "build-windows"]
    permissions:
      contents: write
      actions: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Collect builds
        uses: actions/download-artifact@v4
        with:
          path: dist/
          merge-multiple: true

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          draft: startsWith(github.ref, 'refs/tags/draft-')
